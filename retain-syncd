#!/usr/bin/env bash

configName="$1"
configDir="${XDG_CONFIG_HOME:-$HOME/.config}/retain-sync/$configName"

# check if specified config exists
if ! [[ -d "$configDir" ]]; then
 	printf "\'$configName\' is not a valid configuration. Please run \'retain-sync initialize\'.\n" | \
		systemd-cat -p err -t 'retain-syncd'
	exit 1
fi

# source variables from config
source "$configDir/config"
localDir="${localDir%/}"
remoteDir="${remoteDir%/}"
remoteUser="${remoteUser:+$remoteUser@}"

# set defaults
sshfsDefaults="-o reconnect,ServerAliveInterval=10,ServerAliveCountMax=2,IdentityFile=$sshKey"

# mount sshfs share if not already mounted
mountpoint -q "$configDir/mnt" || sshfs $sshfsDefaults${sshfsOptions:+,$sshfsOptions} \
	"$remoteUser$remoteHost:$remoteDir" "$configDir/mnt" || exit 1

fileWatch() {
	# create PIDfile
	mkdir -p "$XDG_RUNTIME_DIR/retain-sync"
	echo "$$" > "$XDG_RUNTIME_DIR/retain-sync/retain-syncd.pid"

	while true; do
		# wait for a file to be opened
		fileName="$(inotifywait -qre open --format '%w%f' "$localDir" "$configDir/mnt" | \
			sed "s|$localDir|$configDir/mnt|")"
	
		# make sure file is a normal file and not hidden or under a hidden directory
		if [[ -f "$fileName" ]] && [[ ! "$(echo $fileName | sed "s|$configDir/mnt||")" =~ /\. ]]; then
			# test if file exists in priority.csv
			fileLine=$(grep -F "$fileName" "$configDir/priority.csv")

			if [ $? -eq 0 ]; then
				# file exists, increase file priority by one
				newPriority=$(echo "scale=6; $(echo "$fileLine" | rev | \
					cut -d ',' -f 1 | rev)+1" | bc)
				sed -i "s|$fileName,[0-9\.]*$|$fileName,$newPriority|" \
					"$configDir/priority.csv"
			else
				# new file, priority will be set on next sync operation
				continue
			fi
		else
			# file is hidden or not a normal file
			continue
		fi

		# sleep to prevent file access from being registered multiple times
		sleep 1
	done
}

fileWatch &
